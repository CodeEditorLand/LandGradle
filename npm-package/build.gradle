description = 'vscode-gradle :: npm-package'

def isWindows = System.getProperty('os.name').toLowerCase().contains('windows')

project.ext.set('protoLib', "lib/proto")

clean {
  delete file('node_modules')
  delete file('lib')
}

jar.enabled = false;

task copyProtoLib(type: Copy) {
  dependsOn ':extension:generateProto'
  group 'copy'
  description 'Copies genereated proto files'
  from file("../extension/src/proto")
  into protoLib
}

task copyOutputBuffer(type: Copy) {
  group 'copy'
  description 'Copies OutputBuffer helper class'
  from file("../extension/src/OutputBuffer.ts")
  into 'lib'
}

task copyPublicApi(type: Copy) {
  dependsOn ':extension:bundle'
  group 'copy'
  description 'Copies publc API types'
  from file("../extension/out")
  include "*.d.ts"
  into 'lib'
}

task npmInstall(type: CrossPlatformExec) {
  description 'Installs node dependencies'
  inputs.file('package-lock.json')
  outputs.dir('node_modules')
  commandLine 'npm', 'install'
}

task compileTypeScript(type: CrossPlatformExec) {
  dependsOn npmInstall
  description 'Compiles the TypeScript files'
  inputs.file('index.ts')
  outputs.file('index.js');
  commandLine 'npm', 'run', 'compile'
}

assemble.finalizedBy npmInstall,
  compileTypeScript,
  copyProtoLib,
  copyPublicApi,
  copyOutputBuffer
