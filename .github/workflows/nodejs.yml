name: Node CI
on:
  push:
    branches:
      - '**'
  release:
    types: [published]

jobs:
  build-test-linux:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v1
        with:
          java-version: '12.0.2'
          architecture: x64
      - name: Build & test extension
        run: |
          export DISPLAY=':99.0'
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          npm ci
          npm run lint
          npm test

  build-test-macos:
    runs-on: macOS-10.14

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v1
        with:
          java-version: '12.0.2'
          architecture: x64
      - name: Build & test extension
        run: |
          npm ci
          npm run lint
          npm test

  build-test-windows:
    runs-on: windows-2019

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v1
        with:
          java-version: '12.0.2'
          architecture: x64
      - name: Build & test extension
        run: |
          npm ci
          npm run lint
          npm test
        shell: pwsh

  publish:
    needs: [build-test-linux, build-test-windows]
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install deps
        run: |
          npm install -g vsce
          npm ci
      - name: Package extension
        run: |
          tag=${GITHUB_REF#refs/tags/}
          echo "Setting package version $tag"
          npm --no-git-tag-version version "$tag"
          vsce package
      - name: Publish extension to marketplace
        env:
          AZURE_TOKEN: ${{ secrets.AZURE_TOKEN }}
        run: |
          vsce publish -p "$AZURE_TOKEN"
