name: Build
on:
  push:
    branches:
      - '**'
  release:
    types: [published]

jobs:
  artifacts:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Use Java 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
          architecture: x64
      - name: Build lib
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build copyLibToParent
          build-root-directory: java-gradle-tasks
          wrapper-directory: java-gradle-tasks
      - name: Upload lib
        uses: actions/upload-artifact@v1
        with:
          name: lib
          path: lib

  build-test:
    needs: [artifacts]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [12.x]
        java-version: ['8', '12.0.2']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Download lib
        uses: actions/download-artifact@v1
        with:
          name: lib
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use Java ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
          architecture: x64
      - name: Set xvfb
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        env:
          DISPLAY: ':99.0'
        if: matrix.os == 'ubuntu-latest'
      - name: Set perms
        run: |
          chmod +x lib/gradle-tasks
          unset npm_config_prefix
        if: matrix.os != 'windows-latest'
      - name: Build & test extension on ${{ matrix.os }}
        run: |
          npm ci
          npm run lint
          npm test
        env:
          DISPLAY: ':99.0'
          CI: 'true'

  publish:
    needs: [build-test]
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Download lib
        uses: actions/download-artifact@v1
        with:
          name: lib
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install deps
        run: |
          npm install -g vsce
          npm ci
      - name: Package extension
        run: |
          chmod +x lib/gradle-tasks
          tag=${GITHUB_REF#refs/tags/}
          echo "Setting package version $tag"
          npm --no-git-tag-version version "$tag"
          vsce package
      - name: Publish extension to marketplace
        env:
          AZURE_TOKEN: ${{ secrets.AZURE_TOKEN }}
        run: |
          vsce publish -p "$AZURE_TOKEN"
